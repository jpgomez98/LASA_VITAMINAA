N <- 1 # numero de patrones que quieran
r <- 20 # cantidad de repeticiones por patron
sigma<- 0.001
prom1 <- 0.13
senial <- c()
patron <- factor(rep(1:N,each=r))
for (i in 1:length(patron)) {
if(patron[i] == 1){
senial[i] =  abs(rnorm(n=r, mean= prom1, sd=sqrt(sigma)))
}
}
senial <- as.numeric(senial)
analistas <- factor(rep(c("lucia","adrian"),each = 2, times = 5))
repe <- rep(c(1,2),10)
ue <- rep(1:5,each = 4)
base <- data.frame(cbind(patron,senial,analistas,repe,ue))
base$ue <- factor(base$ue)
base$repe <- factor(base$repe)
base$analistas <- factor(base$analistas)
levels(base$analistas) = c("lucia","adrian")
str(base)
# visualizacion:
library(lattice)
bwplot(senial~analistas|ue,layout=c(5,1),ylab = "respuesta",data = base)
dotplot(senial~analistas|ue,xlab="Operadores",layout=c(5,1),data=base)
xyplot(senial~ue,groups = analistas, type = c("p", "a"),pch = 18,  ylab = "Respuesta", base)
plot(tapply(base$senial,base$ue,mean),type = "l",xlab = "pieza",ylab = "respuesta promedio")
N <- 1 # numero de patrones que quieran
r <- 20 # cantidad de repeticiones por patron
sigma<- 0.001
prom1 <- 0.13
senial <- c()
patron <- factor(rep(1:N,each=r))
for (i in 1:length(patron)) {
if(patron[i] == 1){
senial[i] =  abs(rnorm(n=r, mean= prom1, sd=sqrt(sigma)))
}
}
senial <- as.numeric(senial)
analistas <- factor(rep(c("lucia","adrian"),each = 2, times = 5))
repe <- rep(c(1,2),10)
ue <- rep(1:5,each = 4)
base <- data.frame(cbind(patron,senial,analistas,repe,ue))
base$ue <- factor(base$ue)
base$repe <- factor(base$repe)
base$analistas <- factor(base$analistas)
levels(base$analistas) = c("lucia","adrian")
str(base)
# visualizacion:
library(lattice)
bwplot(senial~analistas|ue,layout=c(5,1),ylab = "respuesta",data = base)
dotplot(senial~analistas|ue,xlab="Operadores",layout=c(5,1),data=base)
xyplot(senial~ue,groups = analistas, type = c("p", "a"),pch = 18,  ylab = "Respuesta", base)
plot(tapply(base$senial,base$ue,mean),type = "l",xlab = "pieza",ylab = "respuesta promedio")
N <- 1 # numero de patrones que quieran
r <- 24 # cantidad de repeticiones por patron
sigma<- 0.00001
prom1 <- 0.13
senial <- c()
patron <- factor(rep(1:N,each=r))
for (i in 1:length(patron)) {
if(patron[i] == 1){
senial[i] =  abs(rnorm(n=r, mean= prom1, sd=sqrt(sigma)))
}
}
senial <- as.numeric(senial)
analistas <- factor(rep(c("lucia","adrian"),each = 3, times = 4))
repe <- rep(c(1:3),8)
ue <- rep(1:4,each = 6)
base <- data.frame(cbind(patron,senial,analistas,repe,ue))
base$ue <- factor(base$ue)
base$repe <- factor(base$repe)
base$analistas <- factor(base$analistas)
levels(base$analistas) = c("lucia","adrian")
str(base)
# visualizacion:
library(lattice)
bwplot(senial~analistas|ue,layout=c(4,1),ylab = "respuesta",data = base)
dotplot(senial~analistas|ue,xlab="Operadores",layout=c(4,1),data=base)
xyplot(senial~ue,groups = analistas, type = c("p", "a"),pch = 18,  ylab = "Respuesta", base)
plot(tapply(base$senial,base$ue,mean),type = "l",xlab = "pieza",ylab = "respuesta promedio")
base
version()
version
